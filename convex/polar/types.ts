import { v } from 'convex/values';

export const CountryAlpha2 = v.union(
  v.literal('AD'),
  v.literal('AE'),
  v.literal('AF'),
  v.literal('AG'),
  v.literal('AI'),
  v.literal('AL'),
  v.literal('AM'),
  v.literal('AO'),
  v.literal('AQ'),
  v.literal('AR'),
  v.literal('AS'),
  v.literal('AT'),
  v.literal('AU'),
  v.literal('AW'),
  v.literal('AX'),
  v.literal('AZ'),
  v.literal('BA'),
  v.literal('BB'),
  v.literal('BD'),
  v.literal('BE'),
  v.literal('BF'),
  v.literal('BG'),
  v.literal('BH'),
  v.literal('BI'),
  v.literal('BJ'),
  v.literal('BL'),
  v.literal('BM'),
  v.literal('BN'),
  v.literal('BO'),
  v.literal('BQ'),
  v.literal('BR'),
  v.literal('BS'),
  v.literal('BT'),
  v.literal('BV'),
  v.literal('BW'),
  v.literal('BY'),
  v.literal('BZ'),
  v.literal('CA'),
  v.literal('CC'),
  v.literal('CD'),
  v.literal('CF'),
  v.literal('CG'),
  v.literal('CH'),
  v.literal('CI'),
  v.literal('CK'),
  v.literal('CL'),
  v.literal('CM'),
  v.literal('CN'),
  v.literal('CO'),
  v.literal('CR'),
  v.literal('CU'),
  v.literal('CV'),
  v.literal('CW'),
  v.literal('CX'),
  v.literal('CY'),
  v.literal('CZ'),
  v.literal('DE'),
  v.literal('DJ'),
  v.literal('DK'),
  v.literal('DM'),
  v.literal('DO'),
  v.literal('DZ'),
  v.literal('EC'),
  v.literal('EE'),
  v.literal('EG'),
  v.literal('EH'),
  v.literal('ER'),
  v.literal('ES'),
  v.literal('ET'),
  v.literal('FI'),
  v.literal('FJ'),
  v.literal('FK'),
  v.literal('FM'),
  v.literal('FO'),
  v.literal('FR'),
  v.literal('GA'),
  v.literal('GB'),
  v.literal('GD'),
  v.literal('GE'),
  v.literal('GF'),
  v.literal('GG'),
  v.literal('GH'),
  v.literal('GI'),
  v.literal('GL'),
  v.literal('GM'),
  v.literal('GN'),
  v.literal('GP'),
  v.literal('GQ'),
  v.literal('GR'),
  v.literal('GS'),
  v.literal('GT'),
  v.literal('GU'),
  v.literal('GW'),
  v.literal('GY'),
  v.literal('HK'),
  v.literal('HM'),
  v.literal('HN'),
  v.literal('HR'),
  v.literal('HT'),
  v.literal('HU'),
  v.literal('ID'),
  v.literal('IE'),
  v.literal('IL'),
  v.literal('IM'),
  v.literal('IN'),
  v.literal('IO'),
  v.literal('IQ'),
  v.literal('IR'),
  v.literal('IS'),
  v.literal('IT'),
  v.literal('JE'),
  v.literal('JM'),
  v.literal('JO'),
  v.literal('JP'),
  v.literal('KE'),
  v.literal('KG'),
  v.literal('KH'),
  v.literal('KI'),
  v.literal('KM'),
  v.literal('KN'),
  v.literal('KP'),
  v.literal('KR'),
  v.literal('KW'),
  v.literal('KY'),
  v.literal('KZ'),
  v.literal('LA'),
  v.literal('LB'),
  v.literal('LC'),
  v.literal('LI'),
  v.literal('LK'),
  v.literal('LR'),
  v.literal('LS'),
  v.literal('LT'),
  v.literal('LU'),
  v.literal('LV'),
  v.literal('LY'),
  v.literal('MA'),
  v.literal('MC'),
  v.literal('MD'),
  v.literal('ME'),
  v.literal('MF'),
  v.literal('MG'),
  v.literal('MH'),
  v.literal('MK'),
  v.literal('ML'),
  v.literal('MM'),
  v.literal('MN'),
  v.literal('MO'),
  v.literal('MP'),
  v.literal('MQ'),
  v.literal('MR'),
  v.literal('MS'),
  v.literal('MT'),
  v.literal('MU'),
  v.literal('MV'),
  v.literal('MW'),
  v.literal('MX'),
  v.literal('MY'),
  v.literal('MZ'),
  v.literal('NA'),
  v.literal('NC'),
  v.literal('NE'),
  v.literal('NF'),
  v.literal('NG'),
  v.literal('NI'),
  v.literal('NL'),
  v.literal('NO'),
  v.literal('NP'),
  v.literal('NR'),
  v.literal('NU'),
  v.literal('NZ'),
  v.literal('OM'),
  v.literal('PA'),
  v.literal('PE'),
  v.literal('PF'),
  v.literal('PG'),
  v.literal('PH'),
  v.literal('PK'),
  v.literal('PL'),
  v.literal('PM'),
  v.literal('PN'),
  v.literal('PR'),
  v.literal('PS'),
  v.literal('PT'),
  v.literal('PW'),
  v.literal('PY'),
  v.literal('QA'),
  v.literal('RE'),
  v.literal('RO'),
  v.literal('RS'),
  v.literal('RU'),
  v.literal('RW'),
  v.literal('SA'),
  v.literal('SB'),
  v.literal('SC'),
  v.literal('SD'),
  v.literal('SE'),
  v.literal('SG'),
  v.literal('SH'),
  v.literal('SI'),
  v.literal('SJ'),
  v.literal('SK'),
  v.literal('SL'),
  v.literal('SM'),
  v.literal('SN'),
  v.literal('SO'),
  v.literal('SR'),
  v.literal('SS'),
  v.literal('ST'),
  v.literal('SV'),
  v.literal('SX'),
  v.literal('SY'),
  v.literal('SZ'),
  v.literal('TC'),
  v.literal('TD'),
  v.literal('TF'),
  v.literal('TG'),
  v.literal('TH'),
  v.literal('TJ'),
  v.literal('TK'),
  v.literal('TL'),
  v.literal('TM'),
  v.literal('TN'),
  v.literal('TO'),
  v.literal('TR'),
  v.literal('TT'),
  v.literal('TV'),
  v.literal('TW'),
  v.literal('TZ'),
  v.literal('UA'),
  v.literal('UG'),
  v.literal('UM'),
  v.literal('US'),
  v.literal('UY'),
  v.literal('UZ'),
  v.literal('VA'),
  v.literal('VC'),
  v.literal('VE'),
  v.literal('VG'),
  v.literal('VI'),
  v.literal('VN'),
  v.literal('VU'),
  v.literal('WF'),
  v.literal('WS'),
  v.literal('YE'),
  v.literal('YT'),
  v.literal('ZA'),
  v.literal('ZM'),
  v.literal('ZW'),
);

export const TaxIDFormat = v.union(
  v.literal('ad_nrt'),
  v.literal('ae_trn'),
  v.literal('ar_cuit'),
  v.literal('au_abn'),
  v.literal('au_arn'),
  v.literal('bg_uic'),
  v.literal('bh_vat'),
  v.literal('bo_tin'),
  v.literal('br_cnpj'),
  v.literal('br_cpf'),
  v.literal('ca_bn'),
  v.literal('ca_gst_hst'),
  v.literal('ca_pst_bc'),
  v.literal('ca_pst_mb'),
  v.literal('ca_pst_sk'),
  v.literal('ca_qst'),
  v.literal('ch_uid'),
  v.literal('ch_vat'),
  v.literal('cl_tin'),
  v.literal('cn_tin'),
  v.literal('co_nit'),
  v.literal('cr_tin'),
  v.literal('de_stn'),
  v.literal('do_rcn'),
  v.literal('ec_ruc'),
  v.literal('eg_tin'),
  v.literal('es_cif'),
  v.literal('eu_oss_vat'),
  v.literal('eu_vat'),
  v.literal('gb_vat'),
  v.literal('ge_vat'),
  v.literal('hk_br'),
  v.literal('hr_oib'),
  v.literal('hu_tin'),
  v.literal('id_npwp'),
  v.literal('il_vat'),
  v.literal('in_gst'),
  v.literal('is_vat'),
  v.literal('jp_cn'),
  v.literal('jp_rn'),
  v.literal('jp_trn'),
  v.literal('ke_pin'),
  v.literal('kr_brn'),
  v.literal('kz_bin'),
  v.literal('li_uid'),
  v.literal('mx_rfc'),
  v.literal('my_frp'),
  v.literal('my_itn'),
  v.literal('my_sst'),
  v.literal('ng_tin'),
  v.literal('no_vat'),
  v.literal('no_voec'),
  v.literal('nz_gst'),
  v.literal('om_vat'),
  v.literal('pe_ruc'),
  v.literal('ph_tin'),
  v.literal('ro_tin'),
  v.literal('rs_pib'),
  v.literal('ru_inn'),
  v.literal('ru_kpp'),
  v.literal('sa_vat'),
  v.literal('sg_gst'),
  v.literal('sg_uen'),
  v.literal('si_tin'),
  v.literal('sv_nit'),
  v.literal('th_vat'),
  v.literal('tr_tin'),
  v.literal('tw_vat'),
  v.literal('ua_vat'),
  v.literal('us_ein'),
  v.literal('uy_ruc'),
  v.literal('ve_rif'),
  v.literal('vn_tin'),
  v.literal('za_vat'),
);

export const CustomerMetadata = v.record(
  v.string(),
  v.union(v.string(), v.number(), v.boolean()),
);

export function validateMetadata(
  metadata: Record<string, string | number | boolean>,
): { valid: boolean; error?: string } {
  const entries = Object.entries(metadata);

  if (entries.length > 50) {
    return { valid: false, error: 'Metadata cannot exceed 50 key-value pairs' };
  }

  for (const [key, value] of entries) {
    if (key.length > 40) {
      return {
        valid: false,
        error: `Metadata key "${key}" exceeds 40 characters`,
      };
    }

    if (typeof value === 'string' && value.length > 500) {
      return {
        valid: false,
        error: `Metadata value for key "${key}" exceeds 500 characters`,
      };
    }
  }

  return { valid: true };
}
